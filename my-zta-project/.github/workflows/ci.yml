name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Run linting
      run: |
        flake8 src tests
        mypy src tests
        black --check src tests
        
    - name: Run tests
      run: |
        pytest -v --maxfail=1 --cov=src --cov-report=term-missing
        
    - name: Check coverage
      run: |
        coverage report --fail-under=80
        
    - name: Run sample simulation
      run: |
        python -m src.sim.run_sim --count 10 --out data/test_events.jsonl
        test -f data/test_events.jsonl
        
  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: infra/Dockerfile
        tags: zta-sim:latest
        load: true
        push: false
        
    - name: Run Docker smoke test
      run: |
        mkdir -p data/experiments
        docker run --rm \
          -v ${{ github.workspace }}/data:/app/data \
          -e RUN_COUNT=5 \
          zta-sim
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: experiment-results
        path: data/experiments/
        
    - name: Check experiment outputs
      run: |
        test -d data/experiments
        find data/experiments -type f -name "results.json" | grep . > /dev/null